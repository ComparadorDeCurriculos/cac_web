Integração na Universidade e na Profissão
Durante o semestre os ingressantes assistirão a palestras de alunos, ex-alunos, convidados e de vários docentes do DCC. Docentes do DCC apresentarão o DCC, tópicos de suas pesquisas, história da computação e perspectivas da área, além de sugerir trilhas de disciplinas compatíveis com eventuais interesses dos estudantes.
2
Fundamentos de Matemática para a Computação	
Discurso matemático: leitura e escrita matemática. Estratégias de demonstrações. Princípio da indução finita. Sequências, somas, recorrências e contagem. Algoritmo de Euclides. Divisibilidade nos inteiros. Sistemas de numeração. MDC e MMC. Teorema de Bézout. Teorema fundamental da aritmética. Congruências. O anel dos inteiros módulo m. Os corpos Zp. Relações de equivalência, conjunto quociente, definição de funções e operações no conjunto quociente. Ordem, fecho transitivo de relações. Conjuntos infinitos.
4
Introdução à Computação	
Breve história da computação.  Algoritmos: caracterização, notação, estruturas básicas.  Computadores: unidades básicas, instruções, programa armazenado, endereçamento, programas em linguagem de máquina.  Conceitos de linguagens algorítmicas: expressões; comandos seqüenciais, seletivos e repetitivos; entrada/saída; variáveis estruturadas; funções.  Desenvolvimento e documentação de programas.  Exemplos de processamento não-numérico.  Extensa prática de programação e depuração de programas.
4
Álgebra Booleana e Circuitos Digitais	
Sistemas de representação numérica: bases binária, octal e hexadecimal, conversão entre bases, aritmética com números binários. Noções de circuitos lógicos: funções lógicas, tabelas-verdade, portas lógicas. Noções de organização de computadores. Expressões booleanas: formas canônicas e suas formas minimais, mapas de Karnaugh e outros métodos para minimização de expressões booleanas. PLA e circuitos combinacionais. Circuitos sequenciais: flip-flops e registradores, noções de análise e projeto de circuitos sequenciais. Exemplos de circuitos: somadores, subtratores, multiplicadores, divisores, verificadores de paridade, decodificadores, seletores ou multiplexadores, demultiplexadores, comparadores, conversores de código, deslocadores e contadores. Álgebra booleana: definição axiomática, exemplos (álgebra de conjuntos, cálculo proposicional, funções lógicas), propriedades, e ordens parciais em álgebras booleanas.
4
Cálculo Diferencial e Integral I	
Funções trigonométricas. Funções exponenciais. Função composta e função inversa. Limites: noção intuitiva, propriedades algébricas. Teorema do Confronto. Continuidade. Derivadas: definição, interpretações geométrica e física. Regras de derivação, regra de cadeia, derivada da função inversa e derivação implícita. Aplicações. Teorema do valor médio e consequências. Regras de L'Hospital. Gráficos. Resolução de problemas de Máximos e Mínimos. Integral de Riemann. Técnicas de integração. Aplicações: cálculos de volumes de revolução, comprimento de curvas. Fórmula de Taylor.
6
Vetores e Geometria	
1. Vetores, operações, módulo de um vetor, ângulo de dois vetores. 2. Dependência linear, bases, mudança de bases. Sistema de coordenadas no espaço, transformação de coordenadas. 3. Bases ortogonais, matrizes ortogonais, produto escalar. Orientação do espaço, produto vetorial. 4. Equações vetoriais da reta e do plano no espaço. Paralelismo entre retas e planos. 5. Ortogonalidade entre retas e planos. Distância de dois pontos, de ponto a uma reta e a um plano. Áreas e volumes. 6. Curvas planas, cônicas. Curvas e superfícies no espaço. Noções sobre quádricas.
4
Algoritmos e Estruturas de Dados I
Noções informais de prova de correção e medida do desempenho de algoritmos. Noções de tipos abstratos de dados. Vetores e matrizes. Strings (cadeias de caracteres). Alocação dinâmica de memória e redimensionamento de vetores. Apontadores. Listas ligadas. Estruturas ligadas não lineares. Árvores binárias. Pilhas e filas (implementadas com vetores e listas ligadas). Aplicações. Filas de prioridade (implementadas com heaps). Aplicações. Recursão. Aplicações. Algoritmos de ordenação elementares. Algoritmo quicksort. Algoritmo mergesort. Algoritmo heapsort. Algoritmo radixsort (ordenação digital). Ordenação indireta (ordenação de apontadores). Processamento elementar de texto. Aplicações. Tabelas de símbolos elementares: implementações baseadas em vetores, listas ligadas, busca binária, e árvores binárias de busca. Aplicações. As aplicações podem envolver várias estruturas de dados compostas (como vetores de listas ligadas) e várias estratégias algorítmicas (gulosa, divisão e conquista, programação dinâmica, backtracking, busca em largura, etc.).
4
Técnicas de Programação I
Conceitos basicos de arquitetura de computadores. Linguagem de montagem, montadores, ligação de programas, interrupções, interface com linguagens de alto nível, interface com hardware. Gerenciamento de compilação de programas e bibliotecas com ferramentas como make. Modularização de código. Construção de um programa de médio porte em uma linguagem procedimental (por exemplo, C). Técnicas de depuração e testes de programas. Ferramentas auxiliares no desenvolvimento de programas. Expressões regulares, geradores de analisadores léxicos, noção básica de gramáticas, geradores de analisadores sintáticos. Entrada e saída padrão. concatenação de programas através de pipelines, linguagnes de processamento de texto (por exemplo, AWK e Perl).
4
Introdução à Lógica e Verificação de Programas
Lógica Proposicional Clássica: Os conectivos Booleanos e a linguagem da LPC. Semântica clássica. Tabelas da Verdade. Implicação Lógica. Equivalência Lógica e formas normais. Métodos de prova e inferência lógica, tais como Axiomatizações, Dedução Natural e métodos de Tableaux. Noções sobre correção e completude. Algoritmo ingênuo e não-determinístico de decisão da satisfazibilidade (SAT). Lógica de Primeira Ordem: Linguagem, e semântica em termos de estruturas relacionais. Implicação Lógica, Equivalência Lógica e forma normal prenex. Extensão dos Métodos de prova e inferência lógica para LPO, tais como Axiomatizações. Dedução Natural e métodos de Tableaux. Verificação de Programas pelo método Lógica de Hoare extendendo LPO: Semântica axiomática dos comandos básicos de programação. Lógica de Hoare. Pré- e pós-condições. Comandos nulos, atribuição, seleção, iteração; Invariantes. Terminação. Exemplos clássicos de provas de correção parcial e correção total de programas.
4
Introdução à Probabilidade e à Estatística
1) Estatística Descritiva uni e bidimensional; 2) Probabilidade; 3) Variáveis aleatórias e principais distribuições discretas e contínuas; 4) Aproximação normal; 5) Distribuições amostrais e Teorema Limite Central; 6) Estimadores e propriedades; 7) Estimação pontual e por intervalo; 8) Testes de hipóteses para uma média, uma proporção; 9) Testes de comparação de médias e proporções; Testes qui-quadrado; 10) Teste de Hipóteses para Variância; 11) Regressão e correlação.
6
Cálculo Diferencial e Integral II
Funções de duas ou mais variáveis: limites, continuidade, diferenciabilidade. ; Gradiente; Regra da cadeia; Teorema do Valor Médio; Derivadas de ordem superior; Teorema de Schwarz (enunciado); Fórmula de Taylor; Máximos e Mínimos; Multiplicadores de Lagrange.
4
Álgebra Linear I
1. Espaços vetoriais: definição, subespaços, dependência linear, bases, dimensão. 2. Cálculo matricial, determinantes, sistemas lineares. 3. Transformações lineares e matrizes, núcleo, imagem, posto. 4. Espaços com produto interno: produto interno, norma, ortogonalidade, processo de Gram-Schmidt, complemento ortogonal, projeção. Autovalores e autovetores.
4
Caminhos no Bacharelado em Ciência da Computação
Durante o semestre os ingressantes assistirão a palestras de representantes do grupos de pesquisa do DCC e de pesquisadores de centros de excelência. Docentes do DCC apresentarão o DCC, tópicos de suas pesquisas, história da computação e perspectivas da área, além de sugerir trilhas de disciplinas compatíveis com eventuais interesses dos estudantes.
2
Modelagem e Simulação
Metodologia Científica (experimentos, medidas, leis, corroboração, falseabilidade); sistemas físicos e sua relação com as "leis da Física"; modelagem, simulação e análise de sistemas físicos; aplicações tecnológicas. Aplicação dos conceitos em tópicos da mecânica clássica, como cinemática e dinâmica de objetos pontuais, corpo rígido e sistemas de partículas, movimento harmônico simples e mecânica ondulatória. O impacto da tecnologia de medida (e.g., aproximação da Biologia à engenharia) e dos computadores na ciência moderna (i.e., seu papel na descoberta de conhecimento). Outros modelos: modelos discretos e estoc ásticos (simulação de tecidos de corpos de animais por automatos celulares, ruído em sistemas físicos, passeio aleatório, etc.)
4
Laboratório de Métodos Numéricos
Computação científica. Aritmética de ponto flutuante. Equações não lineares em uma variável. Interpolação polinomial. Aproximação (quadrados mínimos). Transformada de Fourier. Integração numérica. Equações diferenciais.
4
Algoritmos e Estruturas de Dados II
Tipos abstratos de dados e suas implementações. Análise da complexidade de tempo e espaço (pior caso, caso médio, análise amortizada, estimativas empíricas). Tabelas de símbolos: árvores de busca balanceadas, tabelas de espalhamento (hashing), tries ternárias de busca. Grafos: busca em profundidade, busca em largura, caminhos mínimos (algoritmo de Dijkstra), ordenação topológica, componentes fortes. Processamento de texto: expressões regulares e autômatos, busca de padrões (algoritmo KMP, algoritmo de Rabin-Karp), compressão de dados (códigos de Huffman), vetores de sufixos. Tópicos opcionais: árvores B, algoritmo LZW de compressão de texto, gerenciamento de memória (coleta de lixo).
4
Funções Diferenciáveis e Séries
Funções diferenciáveis de R^n em R^p. Regra da Cadeia. Funções de classe C^k. Teorema da Função Implícita para funções de R^2 em R (enunciado e demonstração). Enunciado dos teoremas da função inversa e implícita para funções de R^n em R^p. Método dos multiplicadores de Lagrange para funções em R^n sujeitas a p vínculos. Sequências e séries numéricas. Critérios de convergência. Sequências e séries de funções. Convergência pontual e uniforme. Derivação e integração termo a termo. Séries de potências.
4
Conceitos Fundamentais de Linguagens de Programação
Linguagens funcionais. Funções como valores de primeira ordem; polimorfismo; ambientes e fechamentos; avaliação "adiada"; linguagens funcionais; linguagens orientadas a objetos. Tipos abstratos de dados. Módulos. Herança e hierarquias. Linguagens lógicas. Predicados, cláusulas e o modelo de unificação. Implementação dos vários paradigmas em um interpretador; compilação vs implementação. Administração de memória; pilha vs heap; coleta de lixo.
4
Análise de Algoritmos
Complexidade de tempo e espaço de algoritmos. Análise assintótica: notação O, Ômega e Teta. Análise de pior caso e análise probabilística. Análise amortizada de estruturas dinâmicas (tabelas dinâmicas, union find, splay trees). Paradigmas de projeto de algoritmos (programação dinâmica, divisão e conquista, aleatorização) e métodos de análise. Algoritmos gulosos. Estudo de casos: análise do algoritmo quicksort aleatorizado, análise de tabelas de hashing, problema da mochila, multiplicação de inteiros (algoritmo de Karatsuba) e matrizes (algoritmo de Strassen), árvores geradoras mínimas de grafos (algoritmos de Prim e Kruskal). Cota inferior de ordenação. Introdução à teoria da complexidade computacional. Redução entre problemas. As classes P, NP, e NP-completo. Tópicos opcionais: fluxo em redes (algoritmo de Ford-Fulkerson), programação linear, todos os caminhos mínimos num grafo (algoritmo de Floyd-Warshall), algoritmos de aproximação, algoritmos probabilísticos.
4
Sistemas Operacionais
Introdução a arquiteturas: convencionais, multiprocessadores, paralelas com memória distribuída e redes. Multiprocessamento e multiprogramação. Gerenciamento de memória: memória real vs virtual, paginação e segmentação, memória cache. Processos: estados, contexto, gerenciamento pelo kernel, escalonamento, sinais e interrupções. Comunicação local: pipes, FIFOs, message queues, memória compartilhada. Comunicação remota: síncrona, assíncrona, sockets, chamada remota de procedimentos (RPC) e rendezvous. Protocolos de comunicação em redes: IP, TCP, UDP.  Threads: gerenciamento, sincronização, semáforos, regiões críticas condicionais, monitores. Entrada e saída: aspectos de hardware e software, dispositivos de bloco e caracteres (terminais, discos, relógio, rede), independência de dispositivo, drivers. Sistemas de arquivos. Tipos de arquivos: seqüenciais, acesso indexado, acesso direto, diretórios hierárquicos, organização física e acesso a arquivos, mecanismos de proteção distribuída. Segurança.
4
Introdução ao Desenvolvimento de Sistemas de Software
Técnicas para coleta de requisitos, modelagem, projeto e implementacão de sistemas de software. Conceitos de projetos de sistemas avançados. Qualidade de software. Gerência e manutenção de software. Usabilidade e experiência do usuário. Arquitetura de software, projeto orientado a objetos, padrões de projeto. Verificação e validação com testes automatizados. Persistência de dados: projeto conceitual, lógico e físico de bancos de dados. Modelo entidade relacionamento e modelo relacional: álgebra relacional, cálculo relacional e linguagem SQL.
4
Língua Portuguesa
Aspectos linguísticos e discursivos do texto acadêmico Análise de textos acadêmicos com ênfase aos da área de especialidade (Ciências Exatas: Ciências da Computação, Estatística e Matemática), do ponto de vista da estrutura linguística e discursiva. Produção e edição de textos acadêmicos da área de especialidade (Ciências Exatas: Ciências da Computação, Estatística e Matemática).
3